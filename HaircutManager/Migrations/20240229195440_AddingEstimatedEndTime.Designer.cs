// <auto-generated />
using System;
using HaircutManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HaircutManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240229195440_AddingEstimatedEndTime")]
    partial class AddingEstimatedEndTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HaircutManager.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("ClientEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientName")
                        .HasColumnType("longtext");

                    b.Property<string>("ClientPhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EstimatedEndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HaircutManager.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("AvgTimeOfService")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ServiceName")
                        .HasColumnType("longtext");

                    b.HasKey("ServiceId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            AvgTimeOfService = 30,
                            Description = "Krótkie strzyżenie męskie",
                            Price = 50.00m,
                            ServiceName = "Strzyżenie męskie"
                        },
                        new
                        {
                            ServiceId = 2,
                            AvgTimeOfService = 45,
                            Description = "Strzyżenie damskie wraz z modelowaniem",
                            Price = 70.00m,
                            ServiceName = "Strzyżenie damskie"
                        },
                        new
                        {
                            ServiceId = 3,
                            AvgTimeOfService = 75,
                            Description = "Farbowanie włosów",
                            Price = 150m,
                            ServiceName = "Farbowanie"
                        },
                        new
                        {
                            ServiceId = 4,
                            AvgTimeOfService = 120,
                            Description = "Zabieg chemicznego podkręcenia włosów",
                            Price = 130m,
                            ServiceName = "Trwała"
                        },
                        new
                        {
                            ServiceId = 5,
                            AvgTimeOfService = 150,
                            Description = "Pasmowe farbowanie włosów",
                            Price = 200m,
                            ServiceName = "Pasemka"
                        });
                });

            modelBuilder.Entity("HaircutManager.Models.Reservation", b =>
                {
                    b.HasOne("HaircutManager.Models.Service", "Service")
                        .WithMany("Reservations")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HaircutManager.Models.Service", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
